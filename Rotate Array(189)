Given an integer array nums, rotate the array to the right by k steps, where k is non-negative.

Example 1:

Input: nums = [1,2,3,4,5,6,7], k = 3
Output: [5,6,7,1,2,3,4]
Explanation:
rotate 1 steps to the right: [7,1,2,3,4,5,6]
rotate 2 steps to the right: [6,7,1,2,3,4,5]
rotate 3 steps to the right: [5,6,7,1,2,3,4]

------------------------------

SOLUTION -

class Solution {
public:
   /* void reverseArray(vector<int>& nums, int i,int j){
        while(i <= j){
           swap(nums[i],nums[j]);
           i++;
           j--;
        }
    }*/
    void rotate(vector<int>& nums, int d) {
        int n = nums.size();
        /*k = k%n;

        reverseArray(nums,n-k,n-1);
        reverseArray(nums,0,n-1);
        reverseArray(nums,k,n-1);*/
         d = d%n;
        int *temp = new int[n-d];
      
         for(int i=0;i<n-d;i++){
            temp[i] = nums[i];
          }

        for(int i=n-d;i<n;i++){
            nums[i - (n-d)] = nums[i];
        }

        for(int i=0;i<n-d;i++){
            nums[d+i] = temp[i];
        }
    }
};
