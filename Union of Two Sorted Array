Given two sorted arrays of size n and m respectively, find their union. The Union of two arrays can be defined as the common and distinct elements in the two arrays. Return the elements in sorted order.

Example 1:

Input: 
n = 5, arr1[] = {1, 2, 3, 4, 5}  
m = 5, arr2 [] = {1, 2, 3, 6, 7}
Output: 
1 2 3 4 5 6 7
Explanation: 
Distinct elements including both the arrays are: 1 2 3 4 5 6 7.

---------------------------------------------------

SOLUTION - 

vector<int> findUnion(int arr1[], int arr2[], int n, int m)
    {
        //Your code here
        //return vector with correct order of elements
        
        int i=0,j=0;
        vector<int> ans;
        while( i < n && j < m){
            
            if( arr1[i] == arr2[j]){
                ans.push_back(arr1[i]);
                int x = arr1[i];
                while( i<n && arr1[i] == x ){
                    i++;
                }
                
                while( j<m && arr2[j] == x){
                    j++;
                }
            }else if( arr1[i] < arr2[j]){
                ans.push_back(arr1[i]);
                int x = arr1[i];
                while( i<n && arr1[i] == x ){
                    i++;
                }
            }else if( arr2[j] < arr1[i]){
                ans.push_back(arr2[j]);
                 int x = arr2[j];
                 while( j<m && arr2[j] == x){
                    j++;
                }
            }
            
        }
        
        while( i < n){
            ans.push_back(arr1[i]);
             int x = arr1[i];
                while( i<n && arr1[i] == x ){
                  i++;
                }
        }
        
        while( j < m){
            ans.push_back(arr2[j]);
              int x = arr2[j];
                 while( j<m && arr2[j] == x){
                    j++;
                }
        }
        
        return ans;
    }
