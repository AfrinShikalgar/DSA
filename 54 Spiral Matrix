Given an m x n matrix, return all elements of the matrix in spiral order.

 Example 1:

Input: matrix = [[1,2,3],[4,5,6],[7,8,9]]
Output: [1,2,3,6,9,8,7,4,5]

----------------------------------------------------------

SOLUTION -


class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
        int m = matrix.size();
        int n = matrix[0].size();
        int count = 0;
        int total = m*n;
        vector<int> ans;
        int startrow = 0;
        int endrow = m-1;
        int startcol = 0;
        int endcol = n-1;

        while(count < total){
            for(int i=startcol;i<=endcol && count < total;i++){
                ans.push_back(matrix[startrow][i]);
                count++;
            }
            startrow++;

            for(int i=startrow;i<=endrow  && count < total;i++){
                ans.push_back(matrix[i][endcol]);
                count++;
            }
            endcol--;

            for(int i=endcol;i>=startcol  && count < total;i--){
                ans.push_back(matrix[endrow][i]);
                count++;
            }
            endrow--;

            for(int i=endrow;i>=startrow  && count < total;i--){
                ans.push_back(matrix[i][startcol]);
                count++;
            }
            startcol++;
        }

        return ans;
    }
};
