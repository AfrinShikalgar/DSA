AAdd 1 to a Linked List Number
Difficulty: MediumAccuracy: 31.91%Submissions: 215K+Points: 4
You are given a linked list where each element in the list is a node and have an integer data. You need to add 1 to the number formed by concatinating all the list node numbers together and return the head of the modified linked list. 

Note: The head represents the first element of the given array.

Examples :

Input: LinkedList: 4->5->6
Output: 457

Explanation: 4->5->6 represents 456 and when 1 is added it becomes 457. 
Input: LinkedList: 1->2->3
Output: 124
 
Explanation:  1->2->3 represents 123 and when 1 is added it becomes 124. 


SOLUTION - 


Node* reverse(Node* head) {
    Node* temp = head;
    Node* prev = nullptr;
    
    while (temp != nullptr) {
        Node* newNode = temp->next;
        temp->next = prev;
        prev = temp;
        temp = newNode;
    }
    
    return prev;
}

class Solution {
  public:
    Node* addOne(Node* head) {
        Node* temp = reverse(head);
        int carry = 1;
        
        Node* originalHead = temp; // To keep track of the original head after reversal
        
        while (temp != nullptr) {
            int no = temp->data + carry;
            int digit = no % 10;
            temp->data = digit;
            carry = no / 10;
            
            if (temp->next != nullptr) {
                temp = temp->next;
            } else {
                
                if (carry != 0) {
                    Node* newNode = new Node(carry);
                    temp->next = newNode;
                }
                break;
            }
        }
        
        Node* ans = reverse(originalHead);
        
        return ans;
    }
};
